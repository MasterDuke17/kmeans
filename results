setup
=====

single thread
100000 points
10 clusters
15 iterations
average over 100 repetitions

results
=======

java (1.7.0_76) 183 ms
nim (0.10.3) 189 ms
c (gcc 4.8.2) 218 ms
kotlin (0.10.195) 243 ms
rust (1.0.0-nightly) 267 ms
julia (0.4.0-dev+3052) 407 ms
pypy (2.5.0) 563 ms
luajit (2.0.2) 611 ms
scala (2.10.4) 633 ms
ocaml (4.02.1) 796 ms
clojure (1.7.0-alpha5) 2504 ms
factor (0.97) 2895 ms
erlang (R16B03) 4249 ms
node (0.10.33) 4328 ms
lua (5.2.3) 6946 ms
ocaml bytecode (4.02.1) 8021 ms
python (2.7.6) 10632 ms
pharo (3) 11170 ms


expected result
===============

To check that an implementation is correct, one can print the list of
centroids just before the last iteration. The expected list (checked
across all languages) is:

(1.0084564757347625,2.2868123889219047)
(1.5309869001400929,0.7852174204702566)
(1.6894738051930507,1.7278381134195009)
(2.47790984305693,1.945630722483613)
(2.316742530156974,2.8586899252009443)
(1.4688362327217774,0.2078953628686833)
(2.2019938378105004,1.3767916116287988)
(0.8322035175020596,1.6266582764165047)
(2.035067805355936,0.36068184317747537)
(1.918441639829494,2.2623855839482294)